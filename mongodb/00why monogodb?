数据存储阶段
	1.文件管理阶段(.txt  .doc  .xls)
		优点:
			1.使用简单方便
			2.数据能够长期保存
			3.可以存储大量数据
		缺点:
			1.数据的一致性差
			2.数据的查找修改不方便
			3.数据冗余
	2.数据库管理阶段
		优点:
			1.数据组织结构化,降低冗余
			2.提高增删改查效率
			3.方便扩展
			4.方便程序调用,做自动化的处理
		缺点:
			1.数据库使用特定的语句操作,相对复杂

几个概念:
	1.数据:能够输入到计算机中并能被识别处理的信息的集合
	2.数据结构:研究一个数据集合中,数据之间关系的学科
	3.数据库:按照数据结构,存储数据的仓库.在数据库管理系统管理下在一定介质上的数据集合
	4.数据库管理系统:管理数据库的软件,用于建立维护数据库
	5.数据库系统:由数据库和数据库管理系统等开发工具组成的集合

关系型数据库
	1.定义:采用关系模型来组织数据结构的数据库(二维表)
		示例:Oracle、DB2、SQLServer、MySql、Sqlite
	2.优点:
		1.容易理解,逻辑类似常见的表格
		2.使用方便,都使用sql语句,sql语句很成熟
		3.数据一致性高,冗余低,完整性好
		4.技术成熟,可以使用外部关联等复杂操作
	3.缺点:
		1.每次都需要sql语句的解析,消耗大
		2.不能很好的满足并发需求,特别是海量数据爆发,读写能力不足
		3.关系型数据库每一步操作都要加锁,以保证操作的原子性,增加了数据库负担
		4.数据的一致性有时会导致空间浪费

非关系型数据库(NoSql-->Not only sql)
	1.优点:
		1.高并发,读写能力强
		2.普遍比关系型数据库容易扩展
		3.弱化了数据结构,降低数据一致性
	2.缺点:
		1.通用性差,没有sql语句一样的一致化操作
		2.操作过于冗长,容易混乱(针对MongoDB)
		3.没有join等复杂操作,很多也不支持事务等操作
		4.版本更新较快
	3.NoSql使用情况
		1.对数据一致性要求低
		2.数据库需要处理海量并发
		3.需要处理速度较快,比如做一个临时的中间过渡存储器
		4.在数据库构建时,比较方便的构建非关系型模型
	4.NoSql分类
		1.键值型数据库:Redis
		2.列存储数据库
		3.文档型数据库:MongoDB
		4.图形数据库

MongoDB数据库(文档型数据库)  最像关系型数据库的非关系型数据库
	1.由c++编写的数据库管理系统
	2.支持丰富的增删改查操作
	3.支持丰富的数据类型
	4.支持众多的编程语言接口(Python PHP C++ c#)
	5.使用方便,便于部署.对比其他非关系型数据库相对成熟
